version: "3.4"
services:
  dtl:
    image: ethereumoptimism/data-transport-layer:${IMAGE_TAG__DTL:-latest}
    restart: unless-stopped
    entrypoint: /scripts/start-dtl.sh
    env_file:
      - ./envs/${NETWORK_NAME}/dtl.env
      - .env
    volumes:
      - dtl:/db
      - ./scripts/:/scripts/
    ports:
      - ${PORT__DTL:-7878}:7878
    profiles:
      - legacy

  l2geth:
    image: ethereumoptimism/l2geth:${IMAGE_TAG__L2GETH:-latest}
    restart: unless-stopped
    stop_grace_period: 5m
    entrypoint: 
      - /bin/sh
      - -c
      - "/scripts/init-l2geth.sh && /scripts/start-l2geth.sh"
    env_file:
      - ./envs/${NETWORK_NAME}/l2geth.env
      - .env
    volumes:
      - geth:/geth
      - ./scripts/:/scripts/
    ports:
      - ${PORT__L2GETH_HTTP:-9991}:8545
      - ${PORT__L2GETH_WS:-9992}:8546
    profiles:
      - legacy

  healthcheck:
    image: ethereumoptimism/replica-healthcheck:${IMAGE_TAG__HEALTHCHECK:-latest}
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/healthcheck.env
      - .env
    ports:
      - ${PORT__HEALTHCHECK_METRICS:-7300}:7300
    profiles:
      - current

  fault-detector:
    image: ethereumoptimism/fault-detector:${IMAGE_TAG__FAULT_DETECTOR:-latest}
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/fault-detector.env
      - .env
    ports:
      - ${PORT__FAULT_DETECTOR_METRICS:-7301}:7300
    profiles:
      - current

  op-geth:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101105.3
    restart: unless-stopped
    stop_grace_period: 5m
    entrypoint: /scripts/start-op-geth.sh
    env_file:
      - ./envs/${NETWORK_NAME}/op-geth.env
      - .env
    volumes:
      - ./scripts/:/scripts
      - shared:/shared
      - op_geth:/geth
    ports:
      - ${PORT__OP_GETH_HTTP:-9993}:8545
      - ${PORT__OP_GETH_WS:-9994}:8546
    profiles:
      - current

  op-node:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.1.0
    restart: unless-stopped
    stop_grace_period: 5m
    entrypoint: /scripts/start-op-node.sh
    env_file:
      - .env
    volumes:
      - ./scripts/:/scripts
      - shared:/shared
    ports:
      - ${PORT__OP_NODE_P2P:-9003}:9003/udp
      - ${PORT__OP_NODE_P2P:-9003}:9003/tcp
    profiles:
      - current

  bedrock-init:
    build:
      context: ./docker/dockerfiles
      dockerfile: Dockerfile.bedrock-init
    entrypoint: /scripts/init-bedrock.sh
    env_file:
      - .env
    volumes:
      - ./scripts/:/scripts
      - shared:/shared
      - op_geth:/geth
      - geth:/legacy-geth
      - torrent_downloads:/downloads
    profiles:
      - current

  prometheus:
    image: prom/prometheus:${IMAGE_TAG__PROMETHEUS:-latest}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - ${PORT__PROMETHEUS:-9090}:9090
    profiles:
      - legacy
      - current

  grafana:
    image: grafana/grafana:${IMAGE_TAG__GRAFANA:-9.3.0}
    restart: unless-stopped
    env_file:
      -  ./envs/${NETWORK_NAME}/grafana.env
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/:ro
      - ./docker/grafana/dashboards/simple_node_dashboard.json:/var/lib/grafana/dashboards/simple_node_dashboard.json
      - grafana_data:/var/lib/grafana
    ports:
      - ${PORT__GRAFANA:-3000}:3000
    profiles:
      - legacy
      - current

  influxdb:
    image: influxdb:${IMAGE_TAG__INFLUXDB:-1.8}
    restart: unless-stopped
    env_file:
      - ./envs/${NETWORK_NAME}/influxdb.env
    volumes:
      - ./docker/influxdb/influx_init.iql:/docker-entrypoint-initdb.d/influx_init.iql
      - influxdb_data:/var/lib/influxdb
    ports:
      - ${PORT__INFLUXDB:-8086}:8086
    profiles:
      - legacy
      - current

volumes:
  dtl:
  geth:
  prometheus_data:
  grafana_data:
  influxdb_data:
  shared:
  op_geth:
  torrent_downloads:
